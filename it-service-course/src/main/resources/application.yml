server:
  port: 31200
spring:
  application:
    name: xc-service-course
  datasource:
    druid:
      url: jdbc:mysql://localhost:3306/mooc_course?characterEncoding=utf-8
      username: root
      password: 123
      driverClassName: com.mysql.jdbc.Driver
      initialSize: 5  #初始建立连接数量
      minIdle: 5  #最小连接数量
      maxActive: 20 #最大连接数量
      maxWait: 10000  #获取连接最大等待时间，毫秒
      testOnBorrow: true #申请连接时检测连接是否有效
      testOnReturn: false #归还连接时检测连接是否有效
      timeBetweenEvictionRunsMillis: 60000 #配置间隔检测连接是否有效的时间（单位是毫秒）
      minEvictableIdleTimeMillis: 300000  #连接在连接池的最小生存时间（毫秒）

  jpa:
    show-sql: true

  devtools:
    restart:
      enabled: true #开启热部署
#mybatis输出日志
mybatis:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

#配置分页方言
pagehelper:
  helper-dialect: mysql

#Eureka配置 客户端：注册和发现功能
#eureka:
#  client:
#    registerWithEureka: true #服务注册，是否将自己注册到Eureka服务中
#    fetchRegistry: true #服务发现，是否从Eureka中获取注册信息
#    serviceUrl: #Eureka客户端与Eureka服务端的交互地址，高可用状态配置对方的地址，单机状态配置自己（如果不配置则默认本机8761端口）
#      defaultZone: ${EUREKA_SERVER:http://eureka01:50101/eureka/,http://eureka02:50102/eureka/}
#  instance:
#    prefer-ip-address: true #将自己的id地址注册到Eureka服务中
#    ip-address: ${IP_ADDRESS:127.0.0.1}
#    instance-id: ${spring.application.name}:${server.port} #指定实例id

#ribbon:
#  MaxAutoRetries: 2 #最大重试次数，当Eureka中可以找到服务，但是服务连不上时将会重试
#  MaxAutoRetriesNextServer: 3 #切换实例的重试次数
#  OkToRetryOnAllOperations: false #对所有操作请求都进行重试，如果是get则可以，如果是post，put等操作 没有实现幂等的情况下是很危险的,所以设置为false
#  ConnectTimeout: 5000 #请求连接的超时时间
#  ReadTimeout: 6000 #请求处理的超时时间

course-publish:
  siteId: 5e00751531d28f0994090987  #课程详情页面的站点id，作为rabbitMQ的routingkey
  templateId: 5aec5dd70e661808240ab7a6
  previewUrl: http://www.itmooc.com/cms/preview/
  pageWebPath: /course/detail/
  pagePhysicalPath: /course/detail/
  dataUrlPre: http://localhost:31200/course/courseview/